apply from: 'buildsystem/ci.gradle'
apply from: 'buildsystem/dependencies.gradle'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'

        //lambda
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
    }

    //lambda
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

allprojects {
    ext {
        androidApplicationId = 'com.qtec.router'
        androidVersionCode = 17
        androidVersionName = "V1.3.7"
        testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
        testApplicationId = 'com.fernandocejas.android10.sample.presentation.test'
    }

    repositories {
        google()
        jcenter()
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/releases/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://dl.bintray.com/dudu90/maven' }
        maven { url 'https://jitpack.io' }

    }

    project.gradle.startParameter.excludedTaskNames.add("lint")
}

// Define versions in a single place
ext {
//    // Sdk and tools
//    minSdkVersion = 10
//    targetSdkVersion = 25
//    compileSdkVersion = 25
//    buildToolsVersion = '25.0.3'
//
//    // App dependencies
//    supportLibraryVersion = '24.2.0'
//    guavaVersion = '18.0'
    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
//    powerMockito = '1.6.2'
    hamcrestVersion = '1.3'
//    runnerVersion = '0.5'
//    rulesVersion = '0.5'
//    espressoVersion = '2.2.2'
//    rxjavaVersion = '1.1.8'
//    rxandroidVersion = '1.2.1'

//    sqlbriteVersion = '0.7.0'
}


task wrapper(type: Wrapper) {
    description 'Creates the gradle wrapper.'
    gradleVersion '2.14.1'
}

task runDomainUnitTests(dependsOn: [':domain:test']) {
    description 'Run unit tests for the domain layer.'
}

task runDataUnitTests(dependsOn: [':data:cleanTestDebugUnitTest', ':data:testDebugUnitTest']) {
    description 'Run unit tests for the data layer.'
}

task runUnitTests(dependsOn: ['runDomainUnitTests', 'runDataUnitTests']) {
    description 'Run unit tests for both domain and data layers.'
}

task runAcceptanceTests(dependsOn: [':app:connectedAndroidTest']) {
    description 'Run application acceptance tests.'
}
